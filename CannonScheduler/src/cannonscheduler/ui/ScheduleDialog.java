/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cannonscheduler.ui;

import cannonscheduler.backend.HeuristicScheduler;
import cannonscheduler.backend.Request;
import cannonscheduler.backend.TimeSlot;
import cannonscheduler.ui.RequestFormDialog;
import java.util.ArrayList;

/**
 *
 * @author Travis
 */
public class ScheduleDialog extends javax.swing.JDialog {
    ArrayList<Request> requestList;
    /**
     * Creates new form ScheduleDialog
     */
    public ScheduleDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
////        updateTable(); // Fill table with updated groups
    }
    
    public void setArrayList(ArrayList<Request> requestList) {
        this.requestList = requestList;
    }
    
    public void updateTable(){
        HeuristicScheduler scheduler = new HeuristicScheduler();
        scheduler.addRequests(requestList);
        ArrayList<TimeSlot> scheduled = scheduler.schedule();
        
        
        if  (scheduled != null && scheduled.size() > 0) {
        
            int t_i = 0;
            
            String value = "";
            for(int i=0; i< 11;i++){
                
                if (t_i < scheduled.size()) {
                    if (scheduled.get(t_i).getStartTime() == i)
                        value = scheduled.get(t_i).getName();
                    else if (scheduled.get(t_i).getStartTime()+scheduled.get(t_i).getActualDuration() == i) {
                        value = "";
                        i--;
                        t_i++;
                        continue;
                    }
                }
                
                timeSlotTable.setValueAt(value,i,1);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        timeSlotTable = new javax.swing.JTable();
        makeNewRequestBtn = new javax.swing.JButton();
        goBackBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(240, 200, 200));
        setForeground(new java.awt.Color(110, 0, 0));

        timeSlotTable.setFont(new java.awt.Font("SWRomnt", 1, 24)); // NOI18N
        timeSlotTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"8:00", null},
                {"9:00", null},
                {"10:00", "  "},
                {"11:00", null},
                {"12:00", null},
                {"13:00", null},
                {"14:00", null},
                {"15:00", null},
                {"16:00", null},
                {"17:00", null},
                {"18:00", null}
            },
            new String [] {
                "Time", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        timeSlotTable.setEnabled(false);
        timeSlotTable.setGridColor(new java.awt.Color(228, 128, 128));
        timeSlotTable.setRowHeight(30);
        timeSlotTable.setRowSelectionAllowed(false);
        timeSlotTable.setSelectionBackground(new java.awt.Color(255, 51, 103));
        timeSlotTable.setSelectionForeground(new java.awt.Color(255, 155, 155));
        timeSlotTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(timeSlotTable);

        makeNewRequestBtn.setBackground(new java.awt.Color(240, 250, 80));
        makeNewRequestBtn.setFont(new java.awt.Font("Gabriola", 0, 60)); // NOI18N
        makeNewRequestBtn.setText("Make New Request");
        makeNewRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeNewRequestBtnActionPerformed(evt);
            }
        });

        goBackBtn.setBackground(new java.awt.Color(240, 250, 80));
        goBackBtn.setFont(new java.awt.Font("Gabriola", 0, 60)); // NOI18N
        goBackBtn.setText("Go Back");
        goBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("AR JULIAN", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Current Cannon Schedule");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Time slots shown are subject to change during the day. The final schedule will be emailed to the groups after 22:00 (10:00 PM). ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(makeNewRequestBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(goBackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(makeNewRequestBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void makeNewRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeNewRequestBtnActionPerformed
        RequestFormDialog requestForm = new RequestFormDialog(null,true);
        requestForm.setArrayList(requestList);
        requestForm.setVisible(true);
        requestForm.setLocationRelativeTo(null);
        
        Request request = requestForm.getRequest();
        
        if (request != null) requestList.add(request);
        
        updateTable();
    }//GEN-LAST:event_makeNewRequestBtnActionPerformed

    private void addCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCSVActionPerformed
        
    }//GEN-LAST:event_addCSVActionPerformed

    private void goBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackBtnActionPerformed
        dispose();
    }//GEN-LAST:event_goBackBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScheduleDialog dialog = new ScheduleDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton goBackBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton makeNewRequestBtn;
    private javax.swing.JTable timeSlotTable;
    // End of variables declaration//GEN-END:variables
}
